# Configuration file

"bit addition bounding box" {
    # Sets the alpha value of the portion of the box that is behind other textures. (default = 28) [range: 0 ~ 255, default: 28]
    I:"Alpha Inner Box"=28

    # Sets the alpha value of the portion of the box that is in front of other textures. (default = 115) [range: 0 ~ 255, default: 115]
    I:"Alpha Outer Box"=115

    # Sets the blue value of the box. (default = 0) [range: 0 ~ 255, default: 0]
    I:"Color - Blue"=0

    # Sets the green value of the box. (default = 0) [range: 0 ~ 255, default: 0]
    I:"Color - Green"=0

    # Sets the red value of the box. (default = 0) [range: 0 ~ 255, default: 0]
    I:"Color - Red"=0

    # Sets the line width of the box. (default = 2.0) [range: 0.0 ~ 3.4028235E38, default: 2.0]
    S:"Line Width"=2.0

    # Causes the portion of the box that is behind other textures to be rendered. (default = false) [default: false]
    B:"Render Inner Box"=false

    # Causes the portion of the box that is in front of other textures to be rendered. (default = true) [default: true]
    B:"Render Outer Box"=true
}


"bit addition enveloped shape" {
    # Sets the alpha value of the portion of the shape that is behind other textures. (default = 115) [range: 0 ~ 255, default: 115]
    I:"Alpha Inner Shape"=115

    # Sets the alpha value of the portion of the shape that is in front of other textures. (default = 38) [range: 0 ~ 255, default: 38]
    I:"Alpha Outer Shape"=38

    # Sets the blue value of the shape. (default = 255) [range: 0 ~ 255, default: 255]
    I:"Color - Blue"=255

    # Sets the green value of the shape. (default = 0) [range: 0 ~ 255, default: 0]
    I:"Color - Green"=0

    # Sets the red value of the shape. (default = 0) [range: 0 ~ 255, default: 0]
    I:"Color - Red"=0

    # Sets the line width of the shape. (default = 2.0) [range: 0.0 ~ 3.4028235E38, default: 2.0]
    S:"Line Width"=2.0

    # Causes the portion of the shape that is behind other textures to be rendered. (default = false) [default: false]
    B:"Render Inner Shape"=false

    # Causes the portion of the shape that is in front of other textures to be rendered. (default = true) [default: true]
    B:"Render Outer Shape"=true
}


"bit removal bounding box" {
    # Sets the alpha value of the portion of the box that is behind other textures. (default = 28) [range: 0 ~ 255, default: 28]
    I:"Alpha Inner Box"=28

    # Sets the alpha value of the portion of the box that is in front of other textures. (default = 115) [range: 0 ~ 255, default: 115]
    I:"Alpha Outer Box"=115

    # Sets the blue value of the box. (default = 0) [range: 0 ~ 255, default: 0]
    I:"Color - Blue"=0

    # Sets the green value of the box. (default = 0) [range: 0 ~ 255, default: 0]
    I:"Color - Green"=0

    # Sets the red value of the box. (default = 0) [range: 0 ~ 255, default: 0]
    I:"Color - Red"=0

    # Sets the line width of the box. (default = 2.0) [range: 0.0 ~ 3.4028235E38, default: 2.0]
    S:"Line Width"=2.0

    # Causes the portion of the box that is behind other textures to be rendered. (default = true) [default: true]
    B:"Render Inner Box"=true

    # Causes the portion of the box that is in front of other textures to be rendered. (default = true) [default: true]
    B:"Render Outer Box"=true
}


"bit removal enveloped shape" {
    # Sets the alpha value of the portion of the shape that is behind other textures. (default = 115) [range: 0 ~ 255, default: 115]
    I:"Alpha Inner Shape"=115

    # Sets the alpha value of the portion of the shape that is in front of other textures. (default = 38) [range: 0 ~ 255, default: 38]
    I:"Alpha Outer Shape"=38

    # Sets the blue value of the shape. (default = 255) [range: 0 ~ 255, default: 255]
    I:"Color - Blue"=255

    # Sets the green value of the shape. (default = 0) [range: 0 ~ 255, default: 0]
    I:"Color - Green"=0

    # Sets the red value of the shape. (default = 0) [range: 0 ~ 255, default: 0]
    I:"Color - Red"=0

    # Sets the line width of the shape. (default = 2.0) [range: 0.0 ~ 3.4028235E38, default: 2.0]
    S:"Line Width"=2.0

    # Causes the portion of the shape that is behind other textures to be rendered. (default = true) [default: true]
    B:"Render Inner Shape"=true

    # Causes the portion of the shape that is in front of other textures to be rendered. (default = false) [default: false]
    B:"Render Outer Shape"=false
}


"bit wrench head recipe" {
    # If set to true, the Bit Wrench Head will be craftable, otherwise it will not be. (default = true) [default: true]
    B:"Is Enabled"=true

    # If set to true, the recipe for the Bit Wrench Head will be shaped, and thus depend on the order/number of elements.. If set to false, it will be shapeless and will be order-independent. (default = true) [default: true]
    B:"Is Shaped"=true

    # The Ore Dictionary names or Item names/IDs of components of the crafting recipe for the Bit Wrench Head. The elements of the list correspond to the slots of the crafting grid (left to right / top to bottom). If the recipe shaped, the list must have 4 elements to be a 2x2 recipe, 9 elements to be a 3x3 recipe, etc (i.e. must make a whole grid; root n elements for an n by n grid). Inputting an incorrect number of elements will result in use of the default recipe. Empty strings denote empty slots in the recipe. If the recipe shapeless, order is not important, and duplicates or empty strings will be ignored. Whether the recipe is shaped or shapeless, strings that are not found in the Ore Dictionary or are not valid item names/IDs will be replaced with empty spaces. The default recipe will be used if none of the provided strings are found. [default: [nuggetDiamond], [], [nuggetDiamond], [nuggetDiamond], [], [nuggetDiamond], [], [nuggetDiamond], []]
    S:Recipe <
        nuggetDiamond
        
        nuggetDiamond
        nuggetDiamond
        
        nuggetDiamond
        
        nuggetDiamond
        
     >

    # If set to true, the string names given for the Bit Wrench Head recipe will be used to look up entries in the Ore Dictionary. If set to false, they will be used to look up Items by name or ID. (default = true) [default: true]
    B:"Use Ore Dictionary"=true
}


"bit wrench overlays" {
    # Distance over which the arrowhead overlay used in block/texture translation/rotation will fade in (as well as out) as it moves. If this is set to the minimum value of 0, no fading will occur. (default = 0.3 meters) [range: 0.0 ~ 1.7976931348623157E308, default: 0.3]
    S:"Arrow Fade Distance"=0.3

    # Total travel distance of the arrowhead overlay used in block/texture translation/rotation as measured from the center of the block face the player is looking at. If this is set to the minimum value of 0, only one arrow head will be rendered and no movement will occur. (default = 0.75 meters) [range: 0.0 ~ 1.7976931348623157E308, default: 0.75]
    S:"Arrow Movement Distance"=0.75

    # Number of frames over which the arrowhead overlay used in block/texture translation/rotation will travel from one end to the other of the distance specified by 'Arrow Movement Distance'. If this is set to the minimum value of 1, no movement will occur. (default = 2 seconds at 60 fps) [range: 1.0 ~ 1.7976931348623157E308, default: 120.0]
    S:"Arrow Movement Period"=120.0

    # Distance between the three moving arrowhead overlays used in block/texture translation/rotation. If this is set to the minimum value of 0, only one arrow head will be rendered. (default = 1/3 of the default distance of 0.75 meters, i.e. evenly spaced) [range: 0.0 ~ 1.7976931348623157E308, default: 0.25]
    S:"Arrow Spacing"=0.25

    # Prevents overlays from rendering. (default = false) [default: false]
    B:"Disable Overlay Rendering"=false

    # Half the total travel distance of the bidirectional arrow overlay used in block/texture mirroring as measured from the center of the block face the player is looking at. If this is set to the minimum value of 0, no oscillation will occur. (default = 0.1 meters) [range: 0.0 ~ 1.7976931348623157E308, default: 0.1]
    S:"Mirror Oscillation Amplitude"=0.1

    # Number of frames over which the bidirectional arrow overlay used in block/texture mirroring will complete one oscillation. If this is set to the minimum value of 1, no oscillation will occur. (default = 0.83 seconds at 60 fps) [range: 1.0 ~ 1.7976931348623157E308, default: 50.0]
    S:"Mirror Oscillation Period"=50.0

    # Number of frames over which the cyclical arrow overlay used in block/texture rotation will complete one rotation. If this is set to the minimum value of 1, no rotation will occur. (default = 3 seconds at 60 fps) [range: 1.0 ~ 1.7976931348623157E308, default: 180.0]
    S:"Rotation Period"=180.0

    # Number of frames over which the circle overlay used in block translation will complete one cycle of scaling from a point to full-sized or vice versa. If this is set to the minimum value of 1, no scaling will occur. (default = 1.33 seconds at 60 fps) [range: 1.0 ~ 1.7976931348623157E308, default: 80.0]
    S:"Translation Scale Period"=80.0
}


"bit wrench properties" {
    # The Bit Wrench will have this many uses if it is configured to take damage. (default = 5000) [range: 1 ~ 2147483647, default: 5000]
    I:"Max Damage"=5000

    # Causes the Bit Wrench to take a point of damage when used. (default = true) [default: true]
    B:"Takes Damage"=true
}


"bit wrench recipe" {
    # If set to true, the Bit Wrench will be craftable, otherwise it will not be. (default = true) [default: true]
    B:"Is Enabled"=true

    # If set to true, the recipe for the Bit Wrench will be shaped, and thus depend on the order/number of elements.. If set to false, it will be shapeless and will be order-independent. (default = true) [default: true]
    B:"Is Shaped"=true

    # The Ore Dictionary names or Item names/IDs of components of the crafting recipe for the Bit Wrench. The elements of the list correspond to the slots of the crafting grid (left to right / top to bottom). If the recipe shaped, the list must have 4 elements to be a 2x2 recipe, 9 elements to be a 3x3 recipe, etc (i.e. must make a whole grid; root n elements for an n by n grid). Inputting an incorrect number of elements will result in use of the default recipe. Empty strings denote empty slots in the recipe. If the recipe shapeless, order is not important, and duplicates or empty strings will be ignored. Whether the recipe is shaped or shapeless, strings that are not found in the Ore Dictionary or are not valid item names/IDs will be replaced with empty spaces. The default recipe will be used if none of the provided strings are found. [default: [], [], [ExtraBitManipulation:BitWrenchHead], [], [minecraft:iron_ingot], [], [], [], []]
    S:Recipe <
        
        
        ExtraBitManipulation:BitWrenchHead
        
        minecraft:iron_ingot
        
        
        
        
     >

    # If set to true, the string names given for the Bit Wrench recipe will be used to look up entries in the Ore Dictionary. If set to false, they will be used to look up Items by name or ID. (default = false) [default: false]
    B:"Use Ore Dictionary"=false
}


"curved sculpting spade head recipe" {
    # If set to true, the Curved Sculpting Spade Head will be craftable, otherwise it will not be. (default = true) [default: true]
    B:"Is Enabled"=true

    # If set to true, the recipe for the Curved Sculpting Spade Head will be shaped, and thus depend on the order/number of elements.. If set to false, it will be shapeless and will be order-independent. (default = true) [default: true]
    B:"Is Shaped"=true

    # The Ore Dictionary names or Item names/IDs of components of the crafting recipe for the Curved Sculpting Spade Head. The elements of the list correspond to the slots of the crafting grid (left to right / top to bottom). If the recipe shaped, the list must have 4 elements to be a 2x2 recipe, 9 elements to be a 3x3 recipe, etc (i.e. must make a whole grid; root n elements for an n by n grid). Inputting an incorrect number of elements will result in use of the default recipe. Empty strings denote empty slots in the recipe. If the recipe shapeless, order is not important, and duplicates or empty strings will be ignored. Whether the recipe is shaped or shapeless, strings that are not found in the Ore Dictionary or are not valid item names/IDs will be replaced with empty spaces. The default recipe will be used if none of the provided strings are found. [default: [], [nuggetDiamond], [], [nuggetDiamond], [nuggetDiamond], [nuggetDiamond], [], [nuggetDiamond], []]
    S:Recipe <
        
        nuggetDiamond
        
        nuggetDiamond
        nuggetDiamond
        nuggetDiamond
        
        nuggetDiamond
        
     >

    # If set to true, the string names given for the Curved Sculpting Spade Head recipe will be used to look up entries in the Ore Dictionary. If set to false, they will be used to look up Items by name or ID. (default = true) [default: true]
    B:"Use Ore Dictionary"=true
}


"curved sculpting spade properties" {
    # The semi-diameter (i.e. radius if it is a sphere) of the Curved Sculpting Spade removal shape (Ex: 0 = only the bit clicked - diameter = 1; 1 = bit clicked +- 1 - diameter = 3, etc). (default = 5) [range: 0 ~ 2147483647, default: 5]
    I:"Default Removal Semi-Diameter"=5

    # The Curved Sculpting Spade will be able to add/remove this many bits if it is configured to take damage. (default = 2000000) [range: 1 ~ 2147483647, default: 2000000]
    I:"Max Damage"=2000000

    # The maximum semi-diameter (i.e. radius if it is a sphere) of the Curved Sculpting Spade removal shape (continual increasing/decreasing of radius will cause cycling from 0 to this number). (default = 2 meters) [range: 0 ~ 2147483647, default: 32]
    I:"Max Removal Semi-Diameter"=32

    # Causes the Curved Sculpting Spade to take a point of damage  for every bit added/removed when used. (default = true) [default: true]
    B:"Takes Damage"=true
}


"curved sculpting spade recipe" {
    # If set to true, the Curved Sculpting Spade will be craftable, otherwise it will not be. (default = true) [default: true]
    B:"Is Enabled"=true

    # If set to true, the recipe for the Curved Sculpting Spade will be shaped, and thus depend on the order/number of elements.. If set to false, it will be shapeless and will be order-independent. (default = true) [default: true]
    B:"Is Shaped"=true

    # The Ore Dictionary names or Item names/IDs of components of the crafting recipe for the Curved Sculpting Spade. The elements of the list correspond to the slots of the crafting grid (left to right / top to bottom). If the recipe shaped, the list must have 4 elements to be a 2x2 recipe, 9 elements to be a 3x3 recipe, etc (i.e. must make a whole grid; root n elements for an n by n grid). Inputting an incorrect number of elements will result in use of the default recipe. Empty strings denote empty slots in the recipe. If the recipe shapeless, order is not important, and duplicates or empty strings will be ignored. Whether the recipe is shaped or shapeless, strings that are not found in the Ore Dictionary or are not valid item names/IDs will be replaced with empty spaces. The default recipe will be used if none of the provided strings are found. [default: [], [], [ExtraBitManipulation:SculptingSpadeCurvedHead], [], [minecraft:iron_ingot], [], [], [], []]
    S:Recipe <
        
        
        ExtraBitManipulation:SculptingSpadeCurvedHead
        
        minecraft:iron_ingot
        
        
        
        
     >

    # If set to true, the string names given for the Curved Sculpting Spade recipe will be used to look up entries in the Ore Dictionary. If set to false, they will be used to look up Items by name or ID. (default = false) [default: false]
    B:"Use Ore Dictionary"=false
}


"curved sculpting wire head recipe" {
    # If set to true, the Curved Sculpting Wire Head will be craftable, otherwise it will not be. (default = true) [default: true]
    B:"Is Enabled"=true

    # If set to true, the recipe for the Curved Sculpting Wire Head will be shaped, and thus depend on the order/number of elements.. If set to false, it will be shapeless and will be order-independent. (default = true) [default: true]
    B:"Is Shaped"=true

    # The Ore Dictionary names or Item names/IDs of components of the crafting recipe for the Curved Sculpting Wire Head. The elements of the list correspond to the slots of the crafting grid (left to right / top to bottom). If the recipe shaped, the list must have 4 elements to be a 2x2 recipe, 9 elements to be a 3x3 recipe, etc (i.e. must make a whole grid; root n elements for an n by n grid). Inputting an incorrect number of elements will result in use of the default recipe. Empty strings denote empty slots in the recipe. If the recipe shapeless, order is not important, and duplicates or empty strings will be ignored. Whether the recipe is shaped or shapeless, strings that are not found in the Ore Dictionary or are not valid item names/IDs will be replaced with empty spaces. The default recipe will be used if none of the provided strings are found. [default: [], [nuggetDiamond], [], [nuggetDiamond], [], [nuggetDiamond], [], [nuggetDiamond], []]
    S:Recipe <
        
        nuggetDiamond
        
        nuggetDiamond
        
        nuggetDiamond
        
        nuggetDiamond
        
     >

    # If set to true, the string names given for the Curved Sculpting Wire Head recipe will be used to look up entries in the Ore Dictionary. If set to false, they will be used to look up Items by name or ID. (default = true) [default: true]
    B:"Use Ore Dictionary"=true
}


"curved sculpting wire properties" {
    # The semi-diameter (i.e. radius if it is a sphere) of the Curved Sculpting Wire removal shape (Ex: 0 = only the bit clicked - diameter = 1; 1 = bit clicked +- 1 - diameter = 3, etc). (default = 5) [range: 0 ~ 2147483647, default: 5]
    I:"Default Removal Semi-Diameter"=5

    # The Curved Sculpting Wire will be able to add/remove this many bits if it is configured to take damage. (default = 2000000) [range: 1 ~ 2147483647, default: 2000000]
    I:"Max Damage"=2000000

    # The maximum semi-diameter (i.e. radius if it is a sphere) of the Curved Sculpting Wire removal shape (continual increasing/decreasing of radius will cause cycling from 0 to this number). (default = 2 meters) [range: 0 ~ 2147483647, default: 32]
    I:"Max Removal Semi-Diameter"=32

    # Causes the Curved Sculpting Wire to take a point of damage  for every bit added/removed when used. (default = true) [default: true]
    B:"Takes Damage"=true
}


"curved sculpting wire recipe" {
    # If set to true, the Curved Sculpting Wire will be craftable, otherwise it will not be. (default = true) [default: true]
    B:"Is Enabled"=true

    # If set to true, the recipe for the Curved Sculpting Wire will be shaped, and thus depend on the order/number of elements.. If set to false, it will be shapeless and will be order-independent. (default = true) [default: true]
    B:"Is Shaped"=true

    # The Ore Dictionary names or Item names/IDs of components of the crafting recipe for the Curved Sculpting Wire. The elements of the list correspond to the slots of the crafting grid (left to right / top to bottom). If the recipe shaped, the list must have 4 elements to be a 2x2 recipe, 9 elements to be a 3x3 recipe, etc (i.e. must make a whole grid; root n elements for an n by n grid). Inputting an incorrect number of elements will result in use of the default recipe. Empty strings denote empty slots in the recipe. If the recipe shapeless, order is not important, and duplicates or empty strings will be ignored. Whether the recipe is shaped or shapeless, strings that are not found in the Ore Dictionary or are not valid item names/IDs will be replaced with empty spaces. The default recipe will be used if none of the provided strings are found. [default: [], [], [ExtraBitManipulation:SculptingLoopHead], [], [minecraft:iron_ingot], [], [], [], []]
    S:Recipe <
        
        
        ExtraBitManipulation:SculptingLoopHead
        
        minecraft:iron_ingot
        
        
        
        
     >

    # If set to true, the string names given for the Curved Sculpting Wire recipe will be used to look up entries in the Ore Dictionary. If set to false, they will be used to look up Items by name or ID. (default = false) [default: false]
    B:"Use Ore Dictionary"=false
}


"flat sculpting spade head recipe" {
    # If set to true, the Flat Sculpting Spade Head will be craftable, otherwise it will not be. (default = true) [default: true]
    B:"Is Enabled"=true

    # If set to true, the recipe for the Flat Sculpting Spade Head will be shaped, and thus depend on the order/number of elements.. If set to false, it will be shapeless and will be order-independent. (default = true) [default: true]
    B:"Is Shaped"=true

    # The Ore Dictionary names or Item names/IDs of components of the crafting recipe for the Flat Sculpting Spade Head. The elements of the list correspond to the slots of the crafting grid (left to right / top to bottom). If the recipe shaped, the list must have 4 elements to be a 2x2 recipe, 9 elements to be a 3x3 recipe, etc (i.e. must make a whole grid; root n elements for an n by n grid). Inputting an incorrect number of elements will result in use of the default recipe. Empty strings denote empty slots in the recipe. If the recipe shapeless, order is not important, and duplicates or empty strings will be ignored. Whether the recipe is shaped or shapeless, strings that are not found in the Ore Dictionary or are not valid item names/IDs will be replaced with empty spaces. The default recipe will be used if none of the provided strings are found. [default: [nuggetDiamond], [nuggetDiamond], [nuggetDiamond], [nuggetDiamond], [nuggetDiamond], [nuggetDiamond], [], [nuggetDiamond], []]
    S:Recipe <
        nuggetDiamond
        nuggetDiamond
        nuggetDiamond
        nuggetDiamond
        nuggetDiamond
        nuggetDiamond
        
        nuggetDiamond
        
     >

    # If set to true, the string names given for the Flat Sculpting Spade Head recipe will be used to look up entries in the Ore Dictionary. If set to false, they will be used to look up Items by name or ID. (default = true) [default: true]
    B:"Use Ore Dictionary"=true
}


"flat sculpting spade properties" {
    # The semi-diameter (i.e. radius if it is a sphere) of the Flat Sculpting Spade removal shape (Ex: 0 = only the bit clicked - diameter = 1; 1 = bit clicked +- 1 - diameter = 3, etc). (default = 5) [range: 0 ~ 2147483647, default: 5]
    I:"Default Removal Semi-Diameter"=5

    # The Flat Sculpting Spade will be able to add/remove this many bits if it is configured to take damage. (default = 2000000) [range: 1 ~ 2147483647, default: 2000000]
    I:"Max Damage"=2000000

    # The maximum semi-diameter (i.e. radius if it is a sphere) of the Flat Sculpting Spade removal shape (continual increasing/decreasing of radius will cause cycling from 0 to this number). (default = 2 meters) [range: 0 ~ 2147483647, default: 32]
    I:"Max Removal Semi-Diameter"=32

    # Causes the Flat Sculpting Spade to take a point of damage  for every bit added/removed when used. (default = true) [default: true]
    B:"Takes Damage"=true
}


"flat sculpting spade recipe" {
    # If set to true, the Flat Sculpting Spade will be craftable, otherwise it will not be. (default = true) [default: true]
    B:"Is Enabled"=true

    # If set to true, the recipe for the Flat Sculpting Spade will be shaped, and thus depend on the order/number of elements.. If set to false, it will be shapeless and will be order-independent. (default = true) [default: true]
    B:"Is Shaped"=true

    # The Ore Dictionary names or Item names/IDs of components of the crafting recipe for the Flat Sculpting Spade. The elements of the list correspond to the slots of the crafting grid (left to right / top to bottom). If the recipe shaped, the list must have 4 elements to be a 2x2 recipe, 9 elements to be a 3x3 recipe, etc (i.e. must make a whole grid; root n elements for an n by n grid). Inputting an incorrect number of elements will result in use of the default recipe. Empty strings denote empty slots in the recipe. If the recipe shapeless, order is not important, and duplicates or empty strings will be ignored. Whether the recipe is shaped or shapeless, strings that are not found in the Ore Dictionary or are not valid item names/IDs will be replaced with empty spaces. The default recipe will be used if none of the provided strings are found. [default: [], [], [ExtraBitManipulation:SculptingSpadeSquaredHead], [], [minecraft:iron_ingot], [], [], [], []]
    S:Recipe <
        
        
        ExtraBitManipulation:SculptingSpadeSquaredHead
        
        minecraft:iron_ingot
        
        
        
        
     >

    # If set to true, the string names given for the Flat Sculpting Spade recipe will be used to look up entries in the Ore Dictionary. If set to false, they will be used to look up Items by name or ID. (default = false) [default: false]
    B:"Use Ore Dictionary"=false
}


"sculpting loop box" {
    I:"Alpha Inner Box"=28
    I:"Alpha Outer Box"=115
    I:"Color - Blue"=0
    I:"Color - Green"=0
    I:"Color - Red"=0
    S:"Line Width"=2.0
    B:"Render Inner Box"=true
    B:"Render Outer Box"=true
}


"sculpting loop properties" {
    I:"Default Removal Radius"=5
    I:"Max Damage"=5000
    I:"Max Removal Radius"=32
    B:"Takes Damage"=true
}


"sculpting loop recipe" {
    B:"Is Enabled"=true
    B:"Is Shaped"=true
    S:Recipe <
        
        gemDiamond
        
        
        ingotIron
        
        
        ingotIron
        
     >
    B:"Use Ore Dictionary"=true
}


"sculpting loop shpere" {
    I:"Alpha Inner Sphere"=115
    I:"Alpha Outer Sphere"=38
    I:"Color - Blue"=255
    I:"Color - Green"=0
    I:"Color - Red"=0
    S:"Line Width"=2.0
    B:"Render Inner Sphere"=true
    B:"Render Outer Sphere"=false
}


"sculpting settings" {
    # Amount in meters to contract the box that removed bits randomly spawn in (assuming they spawn in the block space as per 'Drop Bits In Block Space') If set to 0, there will be no contraction and they will be able to spawn anywhere in the box. If set to 0.5, the box will contract by half in all directions down to a point in the center of the original box and they will always spawn from that central point. The default of 0.25 (which is the default behavior when spawning items with Block.spawnAsEntity) contracts the box to half its original size. (default = 0.25 meters) [range: 0.0 ~ 0.5, default: 0.25]
    S:"Bit Spawn Box Contraction"=0.25

    # If set to true, sculpting tool display names will indicate the diameter of their bit removal/addition areas. If set to false, they will indicate the radius (default = true) [default: true]
    B:"Display Name Diameter"=true

    # If set to true, sculpting tool display names will indicate the size of their bit removal/addition areas in meters. If set to false, they will be in bits (default = false) [default: false]
    B:"Display Name Meter Units"=false

    # If set to true, full meter cubed blocks of bits that have all their bits removed will drop as full chiseled blocks. If set to false, they will drop normally as item stacks of bits (64 stacks of size 64). (default = false) [default: false]
    B:"Drop Bits As Full Chiseled Blocks"=false

    # If set to true, when bits removed from blocks with a sculpting tool are spawned in the world, they will be spawned at a random point within the area that intersects the block space and the removal area bounding box (if 'Drop Bits Per Block' is true, they will be spawned in the block they are removed from; otherwise they will be spawned at the block they player right-clicked). If set to false, they will be spawned at the player, in the same way that items are spawned when throwing them on the ground by pressing Q. (default = true) [default: true]
    B:"Drop Bits In Block Space"=true

    # When bits are removed from blocks with a sculpting tool, all the removed bits of each type are counted and a collection of item stacks are created of each item. For the sake of efficiency, the number of stacks generated is the minimum number necessary for that amount (Ex: 179 bits would become 2 stacks of 64 and 1 stack of 51). If this config is set to true, the counts for each block will be added up and spawned after each block is modified. This means that when removing bits in global mode, the bits have the ability to spawn in the respective block spaces they are removed from. However, it also means that more stacks may be generated than necessary if all bits from all blocks removed were to be pooled. If this config is set to false, the bits will be added up and pooled together as they are removed from each block. Only once all blocks are modified will the entire collection of bits be spawned in the world or given to the player. While this is more efficient, it means that the effect of bits spawning in the block spaces they are removed from is not possible. Rather, the bits will either spawn in the space of the block clicked or spawn at the player as per 'Drop Bits In Block Space'. (default = true) [default: true]
    B:"Drop Bits Per Block"=true

    # If set to true, when bits are removed from blocks with a sculpting tool, as many of them will be given to the player as is possible. Any bits that cannot fit in the player's inventory will be spawned in the world. If set to false, no attempt will be made to give them to the player; they will always be spawned in the world. (default = true) [default: true]
    B:"Place Bits In Inventory"=true

    # Distance (in bits) to add to the semi-diameter of a sculpting tool's bit removal/addition area shape. If set to zero, no padding will be added; spheres, for example, will have single bits protruding from each cardinal direction at any size, since only those bits of those layers will be exactly on the sphere's perimeter. If set to 1, there will effectively be no padding for the same reason, but the radius will be one bit larger than specified. A value between 0 and 1 is suggested. (default = 0.2 bits) [range: 0.0 ~ 1.0, default: 0.2]
    S:"Semi-Diameter Padding"=0.2
}


"straight sculpting wire head recipe" {
    # If set to true, the Straight Sculpting Wire Head will be craftable, otherwise it will not be. (default = true) [default: true]
    B:"Is Enabled"=true

    # If set to true, the recipe for the Straight Sculpting Wire Head will be shaped, and thus depend on the order/number of elements.. If set to false, it will be shapeless and will be order-independent. (default = true) [default: true]
    B:"Is Shaped"=true

    # The Ore Dictionary names or Item names/IDs of components of the crafting recipe for the Straight Sculpting Wire Head. The elements of the list correspond to the slots of the crafting grid (left to right / top to bottom). If the recipe shaped, the list must have 4 elements to be a 2x2 recipe, 9 elements to be a 3x3 recipe, etc (i.e. must make a whole grid; root n elements for an n by n grid). Inputting an incorrect number of elements will result in use of the default recipe. Empty strings denote empty slots in the recipe. If the recipe shapeless, order is not important, and duplicates or empty strings will be ignored. Whether the recipe is shaped or shapeless, strings that are not found in the Ore Dictionary or are not valid item names/IDs will be replaced with empty spaces. The default recipe will be used if none of the provided strings are found. [default: [nuggetDiamond], [nuggetDiamond], [nuggetDiamond], [nuggetDiamond], [], [nuggetDiamond], [], [nuggetDiamond], []]
    S:Recipe <
        nuggetDiamond
        nuggetDiamond
        nuggetDiamond
        nuggetDiamond
        
        nuggetDiamond
        
        nuggetDiamond
        
     >

    # If set to true, the string names given for the Straight Sculpting Wire Head recipe will be used to look up entries in the Ore Dictionary. If set to false, they will be used to look up Items by name or ID. (default = true) [default: true]
    B:"Use Ore Dictionary"=true
}


"straight sculpting wire properties" {
    # The semi-diameter (i.e. radius if it is a sphere) of the Straight Sculpting Wire removal shape (Ex: 0 = only the bit clicked - diameter = 1; 1 = bit clicked +- 1 - diameter = 3, etc). (default = 5) [range: 0 ~ 2147483647, default: 5]
    I:"Default Removal Semi-Diameter"=5

    # The Straight Sculpting Wire will be able to add/remove this many bits if it is configured to take damage. (default = 2000000) [range: 1 ~ 2147483647, default: 2000000]
    I:"Max Damage"=2000000

    # The maximum semi-diameter (i.e. radius if it is a sphere) of the Straight Sculpting Wire removal shape (continual increasing/decreasing of radius will cause cycling from 0 to this number). (default = 2 meters) [range: 0 ~ 2147483647, default: 32]
    I:"Max Removal Semi-Diameter"=32

    # Causes the Straight Sculpting Wire to take a point of damage  for every bit added/removed when used. (default = true) [default: true]
    B:"Takes Damage"=true
}


"straight sculpting wire recipe" {
    # If set to true, the Straight Sculpting Wire will be craftable, otherwise it will not be. (default = true) [default: true]
    B:"Is Enabled"=true

    # If set to true, the recipe for the Straight Sculpting Wire will be shaped, and thus depend on the order/number of elements.. If set to false, it will be shapeless and will be order-independent. (default = true) [default: true]
    B:"Is Shaped"=true

    # The Ore Dictionary names or Item names/IDs of components of the crafting recipe for the Straight Sculpting Wire. The elements of the list correspond to the slots of the crafting grid (left to right / top to bottom). If the recipe shaped, the list must have 4 elements to be a 2x2 recipe, 9 elements to be a 3x3 recipe, etc (i.e. must make a whole grid; root n elements for an n by n grid). Inputting an incorrect number of elements will result in use of the default recipe. Empty strings denote empty slots in the recipe. If the recipe shapeless, order is not important, and duplicates or empty strings will be ignored. Whether the recipe is shaped or shapeless, strings that are not found in the Ore Dictionary or are not valid item names/IDs will be replaced with empty spaces. The default recipe will be used if none of the provided strings are found. [default: [], [], [ExtraBitManipulation:SculptingSquareHead], [], [minecraft:iron_ingot], [], [], [], []]
    S:Recipe <
        
        
        ExtraBitManipulation:SculptingSquareHead
        
        minecraft:iron_ingot
        
        
        
        
     >

    # If set to true, the string names given for the Straight Sculpting Wire recipe will be used to look up entries in the Ore Dictionary. If set to false, they will be used to look up Items by name or ID. (default = false) [default: false]
    B:"Use Ore Dictionary"=false
}


version {
    # Used for cofig updating when updating mod version. Do not change. [default: 1.8.9-1.4.0]
    S:Version=1.8.9-1.4.0
}



# Configuration file

##########################################################################################################
# add_shaped
#--------------------------------------------------------------------------------------------------------#
# Add each recipe on a new line in the following format: 
#       <output item id>_____<amount>_____<metadata>_____<nbt tag ({} for blank)>_____<recipe>_____<input items>...
# 
# Where the recipe is a set of characters that look like abc,def,ghi which represent crafting slots: 
# 
#       a  b  c
#       d  e  f
#       g  h  i
# 
# and any space is interpereted as a blank spot, so a diamond axe could be represented as 'dd ,ds , s '
# 
#       d  d  []
#       d  s  []
#       [] s  []
# 
# Where d represents diamond, s represents stick, and [] is an empty slot. To specify what items the
# characters represent, in the input items section, for each character, write an entry in the form:
# 
#       ..._____<character>_____<item id>_____<metadata (-1 for any)>_____<nbt data ({} for any>_____...
# 
# If you want to add an ore dictionary entry, put the string in quotes in place of the item id,
# so for instance: 
# 
#       ..._____s_____"stickWood"_____-1_____{}_____... 
# 
# ###############################################  Examples  #############################################
# For example, if you wanted to add a recipe for a diamond axe that used sugar cane instead of sticks,
# you could write:
# 
#       minecraft:diamond_axe_____1_____0_____{}_____dd,ds, s_____d_____minecraft:diamond_____0_____{}_____s_____minecraft:reeds_____0_____{}
# 
# And if you wanted to add a recipe to add feather falling to diamond boots using feathers, you could write:
# 
#       minecraft:diamond_boots_____1_____0_____{ench:[{id:2,lvl:1}]}_____fff,fdf,fff_____d_____minecraft:diamond_boots_____0_____{}_____f_____minecraft:feather_____0_____{}
# 
##########################################################################################################

add_shaped {
    S:"Recipes to add:" <
     >
}


##########################################################################################################
# add_shapeless
#--------------------------------------------------------------------------------------------------------#
# Add each shapeless recipe on a new line in the following format: 
#       <output item id>_____<amount>_____<metadata>_____<nbt tag ({} for blank)>_____<input items (up to 9)>...
# 
# where the input items are in the format:
# 
#       ..._____<item id>_____<metadata (-1 for any)>_____<nbt data ({} for any>_____...
# 
# If you want to add an ore dictionary entry, put the string in quotes in place of the item id,
# so for instance 
# 
#       ..._____"woodStick"_____-1_____{}_____... 
# 
# ###############################################  Examples  #############################################
# For example, if you want to add a recipe for mushroom stew that requires a water bucket, you could write:
# 
#       minecraft:mushroom_stew_____1_____0_____{}_____minecraft:red_mushroom_____0_____{}_____minecraft:brown_mushroom_____0_____{}_____minecraft:bowl_____0_____{}_____minecraft:water_bucket_____0_____{}
# 
# Note that you will get the bucket back, since it's the container item for the water bucket.
# If you wanted to add a recipe to add sharpness to a diamond sword using a cactus, you could write:
# 
#       minecraft:diamond_sword_____1_____0_____{ench:[{id:16,lvl:1}]}_____minecraft:diamond_sword_____0_____{}_____minecraft:cactus_____0_____{}
# 
##########################################################################################################

add_shapeless {
    S:"Recipes to add:" <
     >
}


##########################################################################################################
# removing
#--------------------------------------------------------------------------------------------------------#
# To remove existing recipes, first add the item ID. This will remove every recipe with this item
# as the output. You can also optionally include a damage (metadata) value and nbt tag, in the format:
# 
#       <item id>_____<metadata (optional)>_____<nbt tag (optional)>.
# 
# If you want to remove a specific recipe with that item as the output, after the nbt you can write the recipe
# in the format (Note you must include the output item's metadata and nbt if you want to specify the recipe!):
# 
#       <output item id>_____<metadata (-1 for any)>_____<nbt tag ({} for any)>_____<recipe>_____<input items>...
# 
# where the recipe is a set of characters that look like abc,def,ghi which represent crafting slots: 
# 
#       a  b  c
#       d  e  f
#       g  h  i
# 
# and any space is interpereted as a blank spot, so a diamond axe could be represented as 'dd ,ds , s '
# 
#       d  d  []
#       d  s  []
#       [] s  []
# 
# Where d represents diamond, s represents stick, and [] is an empty slot. To specify what items the
# characters represent, in the input items section, for each character, write an entry in the form:
# 
#       ..._____<character>_____<item id>_____<metadata (-1 for any)>_____<nbt data ({} for any>_____...
# 
# ###############################################  Examples  #############################################
# - For a simple example, 'minecraft:diamond_helmet' will remove any recipes that give you a diamond helmet.
# - Writing 'minecraft:wool_____5' will get rid of all recipes that output lime wool.
# 
# To remove the recipe for torches that uses charcoal and keep the one that uses coal, you could write:
# minecraft:torch_____-1_____{}_____c,s_____c_____minecraft:coal_____1_____{}_____s_____minecraft:stick_____0_____{}
# 
# Note the metadata for the coal is 1, which means charcoal, and the metadata for the stick is 0, not -1.
# If you can't get a recipe to work, it might be good to play around with changing the metadata to 0 or -1.
##########################################################################################################

removing {
    S:"Recipes to remove:" <
     >
}



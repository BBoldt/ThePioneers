# Configuration file

add_generic {
    # This adds full 1m cube with a very long list of options in the format:
    # 
    #       <Block name>_____<Block display name>_____<Block material>_____<Falls (like sand, true or false)>_____<Beacon Base (true or false)>_____<Hardness>_____<Explosion resistance>_____<Harvesting item type>_____<Harvest level (-1 for any)>_____<Light emitted>_____<Slipperiness>_____<Fire Spread Speed>_____<Flammability>_____<Opacity>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Block material> is one of the default materials (determines some things about
    # the block like footstep sounds and such). The possible values are:
    # 
    #       air, anvil, cactus, cake, carpet, circuits, clay, cloth, coral, craftedSnow, dragonEgg, fire
    #       glass, gourd, grass, ground, ice, iron, lava, leaves, packedIce, piston, plants, portal
    #       redstoneLight, rock, sand, snow, sponge, tnt, vine, water, web, wood
    # 
    # - If <Falls> is true, the block will fall like sand.
    # - If <Beacon Base> is true, the block can be used for beacon bases.
    # - The <Hardness> is a float that determines how long the block takes to break. If it is
    # negative, the block will be unbreakable like bedrock.
    # - The <Explosion resistance> is a float that represents how resistant the block is to explosions.
    # - The <Harvesting item type> is a tool type. The default options are 'pickaxe', 'shovel',
    # 'axe', or 'none'.
    # - The <Harvest level> is what level of tool can harvest the block if the tool type is not
    # 'none'; the default levels are wood and gold = 0, stone = 1, iron = 2, and diamond = 3.
    # - The <Light emitted> is how much the block glows, from 0.0 to 1.0.
    # - The <Slipperiness> is how slippery the block is, with 0.6 as normal and ice as 0.98.
    # - The higher the <Fire spread speed>, the faster the block will catch fire (0 for none).
    # - The higher the <Flammability>, the faster the block will burn and disappear (0 for none).
    # - The <Opacity> is how opaque the block is, with 0 being transparent, and 255 being almost
    # totally opaque. If -1, the block will be totally opaque.
    # 
    # Here are some examples of what default blocks would look like:
    # 
    # Wood Planks: planks_oak_____Oak Planks_____wood_____false_____false_____2.0_____5.0_____axe_____-1_____0.0_____0.6_____5_____20_____-1
    # Stone:       stone_____Stone_____rock_____false_____false_____1.5_____10.0_____pickaxe_____0_____0.0_____0.6_____0_____0_____-1
    # Iron:        iron_block_____Iron Block_____metal_____false_____true_____5.0_____10.0_____pickaxe_____1_____0.0_____0.6_____0_____0_____-1
    # Sand:        sand_____Sand_____sand_____true_____false_____0.5_____0.0_____shovel_____-1_____0.0_____0.6_____0_____0_____-1
    # Glowstone:   glowstone_____Glowstone_____glass_____false_____false_____0.3_____0.0_____none_____-1_____1.0_____0.6_____0_____0_____-1
    # Packed Ice:  packed_ice_____Packed Ice_____glass_____false_____false_____0.5_____0.0_____pickaxe_____-1_____0.0_____0.98_____0_____0_____-1
    # Ice:         ice_____Ice_____ice_____false_____false_____0.5_____0.0_____pickaxe_____-1_____0.0_____0.98_____0_____0_____3
    # Obsidian:    obsidian_____Obsidian_____rock_____false_____false_____50.0_____2000.0_____pickaxe_____3_____0.0_____0.6_____0_____0_____-1
    # Bedrock:     bedrock_____Bedrock_____rock_____false_____false_____-1.0_____6000000.0_____pickaxe_____-1_____0.0_____0.6_____0_____0_____-1
    # Glass:       glass_____Glass_____glass_____false_____false_____0.3_____0.0_____none_____-1_____0.0_____0.6_____0_____0_____0
    # 
    # For an example, if you wanted to add a ruby ore and resource block for ruby, you could put:
    # 
    #       ruby_ore_____Ruby Ore_____rock_____false_____false_____3.0_____5.0_____pickaxe_____2_____0.0_____0.6_____0_____0_____-1
    #       ruby_block_____Ruby Block_____iron_____false_____true_____5.0_____10.0_____pickaxe_____2_____0.0_____0.6_____0_____0_____-1
    S:generic <
     >

    # This adds a pillar-like block with a very long list of options in the format:
    # 
    #       <Block name>_____<Block display name>_____<Block material>_____<Beacon Base (true or false)>_____<Hardness>_____<Explosion resistance>_____<Harvesting item type>_____<Harvest level (-1 for any)>_____<Light emitted>_____<Slipperiness>_____<Fire Spread Speed>_____<Flammability>_____<Opacity>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Block material> is one of the default materials (determines some things about
    # the block like footstep sounds and such). The possible values are:
    # 
    #       air, anvil, cactus, cake, carpet, circuits, clay, cloth, coral, craftedSnow, dragonEgg, fire
    #       glass, gourd, grass, ground, ice, iron, lava, leaves, packedIce, piston, plants, portal
    #       redstoneLight, rock, sand, snow, sponge, tnt, vine, water, web, wood
    # 
    # - If <Beacon Base> is true, the block can be used for beacon bases.
    # - The <Hardness> is a float that determines how long the block takes to break. If it is
    # negative, the block will be unbreakable like bedrock.
    # - The <Explosion resistance> is a float that represents how resistant the block is to explosions.
    # - The <Harvesting item type> is a tool type. The default options are 'pickaxe', 'shovel',
    # 'axe', or 'none'.
    # - The <Harvest level> is what level of tool can harvest the block if the tool type is not
    # 'none'; the default levels are wood and gold = 0, stone = 1, iron = 2, and diamond = 3.
    # - The <Light emitted> is how much the block glows, from 0.0 to 1.0.
    # - The <Slipperiness> is how slippery the block is, with 0.6 as normal and ice as 0.98.
    # - The higher the <Fire spread speed>, the faster the block will catch fire (0 for none).
    # - The higher the <Flammability>, the faster the block will burn and disappear (0 for none).
    # - The <Opacity> is how opaque the block is, with 0 being transparent, and 255 being almost
    # totally opaque. If -1, the block will be totally opaque.
    # Here are some examples of what default blocks would look like:
    # 
    # Oak Logs:      log_oak_____Oak Log_____wood_____false_____2.0_____0.0_____axe_____-1_____0.0_____0.6_____5_____5_____-1
    # Quartz Pillar: quartz_pillar_____Quartz Pillar_____rock_____false_____0.8_____0.0_____pickaxe_____0_____0.0_____0.6_____0_____0_____-1
    # 
    # For an example, if you wanted to add a ruby pillar, you could put:
    # 
    #       ruby_pillar_____Ruby Pillar_____iron_____true_____5.0_____10.0_____pickaxe_____2_____0.0_____0.6_____0_____0_____-1
    S:"logs/pillars" <
     >

    # This adds full 1m cube with 16 metadata values and options in the format:
    # 
    #       <Block name>_____<Block display name 0>_____<Block display name 1>_____<Block display name 2>_____<Block display name 3>_____<Block display name 4>_____<Block display name 5>_____<Block display name 6>_____<Block display name 7>_____<Block display name 8>_____<Block display name 9>_____<Block display name 10>_____<Block display name 11>_____<Block display name 12>_____<Block display name 13>_____<Block display name 14>_____<Block display name 15>_____<Block material>_____<Beacon Base (true or false)>_____<Hardness>_____<Explosion resistance>_____<Harvesting item type>_____<Harvest level (-1 for any)>_____<Light emitted>_____<Slipperiness>_____<Fire Spread Speed>_____<Flammability>_____<Opacity>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>_0.json to <Block name>_15. Note that in your
    # blockstates, you should have an entry for every metadata, from "metadata=0": to "metadata=15":
    # - The <Block display name>s are what people will see ingame while holding the block.
    # - The <Block material> is one of the default materials (determines some things about
    # the block like footstep sounds and such). The possible values are:
    # 
    #       air, anvil, cactus, cake, carpet, circuits, clay, cloth, coral, craftedSnow, dragonEgg, fire
    #       glass, gourd, grass, ground, ice, iron, lava, leaves, packedIce, piston, plants, portal
    #       redstoneLight, rock, sand, snow, sponge, tnt, vine, water, web, wood
    # 
    # - If <Beacon Base> is true, the block can be used for beacon bases.
    # - The <Hardness> is a float that determines how long the block takes to break. If it is
    # negative, the block will be unbreakable like bedrock.
    # - The <Explosion resistance> is a float that represents how resistant the block is to explosions.
    # - The <Harvesting item type> is a tool type. The default options are 'pickaxe', 'shovel',
    # 'axe', or 'none'.
    # - The <Harvest level> is what level of tool can harvest the block if the tool type is not
    # 'none'; the default levels are wood and gold = 0, stone = 1, iron = 2, and diamond = 3.
    # - The <Light emitted> is how much the block glows, from 0.0 to 1.0.
    # - The <Slipperiness> is how slippery the block is, with 0.6 as normal and ice as 0.98.
    # - The higher the <Fire spread speed>, the faster the block will catch fire (0 for none).
    # - The higher the <Flammability>, the faster the block will burn and disappear (0 for none).
    # - The <Opacity> is how opaque the block is, with 0 being transparent, and 255 being almost
    # totally opaque. If -1, the block will be totally opaque.
    # 
    # Here are some examples of what default blocks would look like:
    # 
    # Wool:             wool_____White Wool_____Orange Wool_____Magenta Wool_____Light Blue Wool_____Yellow Wool_____Lime Wool_____Pink Wool_____Grey Wool_____Light Grey Wool_____Cyan Wool_____Purple Wool_____Blue Wool_____Brown Wool_____Green Wool_____Red Wool_____Black Wool_____cloth_____false_____0.8_____0.0_____none_____-1_____0.0_____0.6_____30_____60_____-1
    # Stained Glass:    stained_glass_____White Stained Glass_____Orange Stained Glass_____Magenta Stained Glass_____Light Blue Stained Glass_____Yellow Stained Glass_____Lime Stained Glass_____Pink Stained Glass_____Grey Stained Glass_____Light Grey Stained Glass_____Cyan Stained Glass_____Purple Stained Glass_____Blue Stained Glass_____Brown Stained Glass_____Green Stained Glass_____Red Stained Glass_____Black Stained Glass_____glass_____false_____0.3_____0.0_____none_____-1_____0.0_____0.6_____0_____0_____0
    # 
    # For an example, if you wanted to add 16 colours of bricks, assuming that you have
    # 16 models that you list in the blockstates file, you could put:
    # 
    #       stained_bricks_____White Bricks_____Orange Bricks_____Magenta Bricks_____Light Blue Bricks_____Yellow Bricks_____Lime Bricks_____Pink Bricks_____Grey Bricks_____Light Grey Bricks_____Cyan Bricks_____Purple Bricks_____Blue Bricks_____Brown Bricks_____Green Bricks_____Red Bricks_____Black Bricks_____rock_____false_____3.0_____5.0_____pickaxe_____0_____0.0_____0.6_____0_____0_____-1
    S:multiple_metadata <
     >
}


adding_crops {
    # This adds a crop block with options in the format:
    # 
    #       <Block name>_____<Block display name>_____<Seed item name>_____<Seed item metadata>_____<Light emitted>_____<Fire Spread Speed>_____<Flammability>_____<Can bonemeal (true or false)>_____<Nether plant (true or false)>_____<Right click to harvest (true or false)>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Seed item name> is the name of the item that is considered the seed for this crop.
    # - The <Seed item metadata> is the metadata value of the seed item, with -1 for any.
    # - The <Light emitted> is how much the block glows, from 0.0 to 1.0.
    # - The higher the <Fire spread speed>, the faster the block will catch fire (0 for none).
    # - The higher the <Flammability>, the faster the block will burn and disappear (0 for none).
    # - If <Can bonemeal> is true, bonemeal will grow the crops.
    # - If <Nether plant> is true, the crop should be planted on soul sand like nether wart.
    # - If <Right click to harvest> is true, you can harvest and replant the crop by right clicking.
    # 
    # For example, wheat and nether wart would look something like:
    # 
    #       wheat_____Wheat_____wheat_seeds_____-1_____0.0_____0_____0_____true_____false_____false
    #       nether_wart_____Nether Wart_____nether_wart_____-1_____0.0_____0_____0_____false_____true_____false
    # 
    # For an example, if you wanted to add a 'ruby crop' that you can right click harvest, you could put:
    # 
    #       ruby_crop_____Ruby Crop_____lootplusplus:ruby_____-1_____0.0_____0_____0_____true_____false_____true
    S:crops <
     >
}


adding_decoration {
    # This adds a fence-like block based on an existing block in the format:
    # 
    #       <Block name>_____<Block display name>_____<Existing block name>_____<Existing block metadata>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Existing block name> is the name of the block the slab should be based on.
    # - The <Existing block metadata> is the metadata of the block it is based on.
    # 
    # For an example, if you wanted to add a ruby block fence, you could put:
    # 
    #       ruby_fence_____Ruby Fence_____lootplusplus:ruby_block_____0
    S:fences <
     >

    # This adds a glass-pane-like block based on an existing block in the format:
    # 
    #       <Block name>_____<Block display name>_____<Existing block name>_____<Existing block metadata>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Existing block name> is the name of the block the slab should be based on.
    # - The <Existing block metadata> is the metadata of the block it is based on.
    # 
    # Here are some examples of what default blocks would look like:
    # 
    # Glass Pane:  glass_pane_____Glass Pane_____minecraft:glass_____0
    # Iron Bars:   iron_bars_____Iron Bars_____minecraft:iron_block_____0
    # 
    # For an example, if you wanted to add ruby bars, you could put:
    # 
    #       ruby_bars_____Ruby Bars_____lootplusplus:ruby_block_____0
    S:"panes/bars" <
     >

    # This adds a 'plant' (single crossed texture) in the format:
    # 
    #       <Block name>_____<Block display name>_____<Block material>_____<Hardness>_____<Explosion resistance>_____<Harvesting item type>_____<Harvest level (-1 for any)>_____<Light emitted>_____<Fire Spread Speed>_____<Flammability>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Block material> is one of the default materials (determines some things about
    # the block like footstep sounds and such). The possible values are:
    # 
    #       air, anvil, cactus, cake, carpet, circuits, clay, cloth, coral, craftedSnow, dragonEgg, fire
    #       glass, gourd, grass, ground, ice, iron, lava, leaves, packedIce, piston, plants, portal
    #       redstoneLight, rock, sand, snow, sponge, tnt, vine, water, web, wood
    # 
    # - The <Hardness> is a float that determines how long the block takes to break.
    # - The <Explosion resistance> is a float that represents how resistant the block is to explosions.
    # - The <Harvesting item type> is a tool type. The default options are 'pickaxe', 'shovel',
    # 'axe', or 'none'.
    # - The <Harvest level> is what level of tool can harvest the block if the tool type is not
    # 'none'; the default levels are wood and gold = 0, stone = 1, iron = 2, and diamond = 3.
    # - The <Light emitted> is how much the block glows, from 0.0 to 1.0.
    # - The higher the <Fire spread speed>, the faster the block will catch fire (0 for none).
    # - The higher the <Flammability>, the faster the block will burn and disappear (0 for none).
    # 
    # Here is an example of what a default flower would look like:
    # 
    #       dandelion_____Dandelion_____plants_____0.0_____0.0_____none_____-1_____0.0_____60_____100
    # 
    # For an example, if you wanted to add a ruby ore and resource block for ruby, you could put:
    # 
    #       ruby_flower_____Ruby Flower_____plants_____0.0_____0.0_____none_____-1_____0.0_____60_____100
    # 
    S:plants <
     >

    # This adds a half slab based on an existing block in the format:
    # 
    #       <Block name>_____<Block display name>_____<Existing block name>_____<Existing block metadata>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json, and also files for the double block
    # assets/lootplusplus/blockstates/<Block name>_double.json and
    # assets/lootplusplus/models/item/<Block name>_double.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Existing block name> is the name of the block the slab should be based on.
    # - The <Existing block metadata> is the metadata of the block it is based on.
    # 
    # Here are some examples of what default blocks would look like:
    # 
    # Wood Slab:    wooden_slab_____Oak Slab_____minecraft:planks_____0
    # Stone Slab:   stone_slab_____Stone Slab_____minecraft:stone_____0
    # 
    # For an example, if you wanted to add a ruby slab, you could put:
    # 
    #       ruby_block_slab_____Ruby Block Slab_____lootplusplus:ruby_block_____0
    #       ruby_pillar_slab_____Ruby Pillar Slab_____lootplusplus:ruby_pillar_____0
    S:slabs <
     >

    # This adds stairs based on an existing block:
    # 
    #       <Block name>_____<Block display name>_____<Existing block name>_____<Existing block metadata>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Existing block name> is the name of the block these stairs should be based on.
    # - The <Existing block metadata> is the metadata of the block these are based on.
    # 
    # Here are some examples of what default blocks would look like:
    # 
    # Oak wood stairs:   oak_stairs_____Oak Stairs_____minecraft:planks_____0
    # Stone Brick Slab:  stonebrick_stairs_____Stone Brick Stairs_____minecraft:stonebrick_____0
    # 
    # For an example, if you wanted to add a ruby ore and resource block for ruby, you could put:
    # 
    #       ruby_block_stairs_____Ruby Block Stairs_____lootplusplus:ruby_block_____0
    S:stairs <
     >

    # This adds a carpet-like block based on an existing block in the format:
    # 
    #       <Block name>_____<Block display name>_____<Existing block name>_____<Existing block metadata>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Existing block name> is the name of the block the slab should be based on.
    # - The <Existing block metadata> is the metadata of the block it is based on.
    # 
    # For an example, if you wanted to add a ruby block tile, you could put:
    # 
    #       ruby_tile_____Ruby Tile_____lootplusplus:ruby_block_____0
    S:"tiles/carpets" <
     >

    # This adds a cobblestone wall-like block based on an existing block in the format:
    # 
    #       <Block name>_____<Block display name>_____<Existing block name>_____<Existing block metadata>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Existing block name> is the name of the block the slab should be based on.
    # - The <Existing block metadata> is the metadata of the block it is based on.
    # 
    # For an example, if you wanted to add a ruby block wall, you could put:
    # 
    #       ruby_wall_____Ruby Wall_____lootplusplus:ruby_block_____0
    S:walls <
     >
}


adding_interactable {
    # This adds a cake block with options in the format:
    # 
    #       <Block name>_____<Block display name>_____<Hardness>_____<Explosion resistance>_____<Light emitted>_____<Slipperiness>_____<Fire Spread Speed>_____<Flammability>_____<Number of bites>_____<Hunger restored>_____<Saturation restored>_____<Always edible? (true or false)>_____<Potion effects given (optional)>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Hardness> is a float that determines how long the block takes to break. If it is
    # negative, the block will be unbreakable like bedrock.
    # - The <Explosion resistance> is a float that represents how resistant the block is to explosions.
    # - The <Light emitted> is how much the block glows, from 0.0 to 1.0.
    # - The <Slipperiness> is how slippery the block is, with 0.6 as normal and ice as 0.98.
    # - The higher the <Fire spread speed>, the faster the block will catch fire (0 for none).
    # - The higher the <Flammability>, the faster the block will burn and disappear (0 for none).
    # - The <Number of bites> is how many bites the cake has.
    # - The <Hunger restored> is the number of hunger points restored
    # - The <Saturation restored> is the percentage of saturation restored
    # - If <Always edible> is true, you can eat the cake even if you're not hungry
    # - Finally the potions the food gives you is a list of potion effects in the format:
    # 
    #       ..._____<Potion effect id>-<Potion duration>-<Potion level (0 is 1)>-<Probability (between 0.0 and 1.0)>-<Particle type (normal, faded, none)>_____...
    # 
    # For example, the vanilla cake (lol, I always laugh at that) would look like:
    # 
    #       cake_____Cake_____0.3_____0.0_____0.0_____0.6_____0_____0_____7_____2_____0.1_____false
    # 
    # For an example, if you wanted to add a ruby cake that gives you health boost and is always
    # edible, you could put:
    # 
    #       ruby_apple_cake_____§bRuby Apple Cake_____0.6_____10.0_____0.0_____0.6_____0_____0_____7_____4_____0.5_____true_____10-150-1-1.0-normal_____21-2400-1-1.0-normal
    S:cakes <
     >

    # This adds a crafting table with options in the format:
    # 
    #       <Block name>_____<Block display name>_____<Block material>_____<Hardness>_____<Explosion resistance>_____<Harvesting item type>_____<Harvest level (-1 for any)>_____<Light emitted>_____<Slipperiness>_____<Fire Spread Speed>_____<Flammability>_____<Opacity>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Block material> is one of the default materials (determines some things about
    # the block like footstep sounds and such). The possible values are:
    # 
    #       air, anvil, cactus, cake, carpet, circuits, clay, cloth, coral, craftedSnow, dragonEgg, fire
    #       glass, gourd, grass, ground, ice, iron, lava, leaves, packedIce, piston, plants, portal
    #       redstoneLight, rock, sand, snow, sponge, tnt, vine, water, web, wood
    # 
    # - The <Hardness> is a float that determines how long the block takes to break. If it is
    # negative, the block will be unbreakable like bedrock.
    # - The <Explosion resistance> is a float that represents how resistant the block is to explosions.
    # - The <Harvesting item type> is a tool type. The default options are 'pickaxe', 'shovel',
    # 'axe', or 'none'.
    # - The <Harvest level> is what level of tool can harvest the block if the tool type is not
    # 'none'; the default levels are wood and gold = 0, stone = 1, iron = 2, and diamond = 3.
    # - The <Light emitted> is how much the block glows, from 0.0 to 1.0.
    # - The <Slipperiness> is how slippery the block is, with 0.6 as normal and ice as 0.98.
    # - The higher the <Fire spread speed>, the faster the block will catch fire (0 for none).
    # - The higher the <Flammability>, the faster the block will burn and disappear (0 for none).
    # - The <Opacity> is how opaque the block is, with 0 being transparent, and 255 being almost
    # totally opaque. If -1, the block will be totally opaque.
    # For an example, if you wanted to add a ruby block crafting table, you could put:
    # 
    #       ruby_crafting_table_____Ruby Crafting Table_____iron_____5.0_____10.0_____pickaxe_____2_____0.0_____0.6_____0_____0_____-1
    S:crafting_tables <
     >

    # This adds a furnace block in the format:
    # 
    #       <Block name>_____<Block display name>_____<Block material>_____<Hardness>_____<Explosion resistance>_____<Harvesting item type>_____<Harvest level (-1 for any)>_____<Light emitted>_____<Slipperiness>_____<Speed>_____<Opacity>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack with suffixes _lit and _unlit. So the files would be at
    # assets/lootplusplus/blockstates/<Block name>_lit.json, assets/lootplusplus/models/item/<Block name>_lit.json,
    # assets/lootplusplus/blockstates/<Block name>_unlit.json, assets/lootplusplus/models/item/<Block name>_unlit.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Block material> is one of the default materials. (In this case the material is hard
    # coded to be 'rock', so this will only determine mining/footstep sounds!) The possible values are:
    # 
    #       air, anvil, cactus, cake, carpet, circuits, clay, cloth, coral, craftedSnow, dragonEgg, fire
    #       glass, gourd, grass, ground, ice, iron, lava, leaves, packedIce, piston, plants, portal
    #       redstoneLight, rock, sand, snow, sponge, tnt, vine, water, web, wood
    # 
    # - The <Hardness> is a float that determines how long the block takes to break.
    # - The <Explosion resistance> is a float that represents how resistant the block is to explosions.
    # - The <Harvesting item type> is a tool type. The default options are 'pickaxe', 'shovel',
    # 'axe', or 'none'.
    # - The <Harvest level> is what level of tool can harvest the block if the tool type is not
    # 'none'; the default levels are wood and gold = 0, stone = 1, iron = 2, and diamond = 3.
    # - The <Light emitted> is how much the block glows, from 0.0 to 1.0.
    # - The <Slipperiness> is how slippery the block is, with 0.6 as normal and ice as 0.98.
    # - The <Speed> is how fast the furnace runs, with 1.0 being normal, 2.0 twice as fast, ect.
    # - The <Opacity> is how opaque the block is, with 0 being transparent, and 255 being almost
    # totally opaque. If -1, the block will be totally opaque.
    # 
    # For an example, if you wanted to add a ruby furnace which is a bit faster, you could put:
    # 
    #       ruby_furnace_____Ruby Furnace_____iron_____3.0_____10.0_____pickaxe_____2_____0.0_____0.6_____1.5_____-1
    # 
    S:furnaces <
     >

    # This adds a ladder block in the format:
    # 
    #       <Block name>_____<Block display name>_____<Hardness>_____<Explosion resistance>_____<Harvesting item type>_____<Harvest level (-1 for any)>_____<Light emitted>_____<Fire Spread Speed>_____<Flammability>_____<Slipperiness>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Hardness> is a float that determines how long the block takes to break.
    # - The <Explosion resistance> is a float that represents how resistant the block is to explosions.
    # - The <Harvesting item type> is a tool type. The default options are 'pickaxe', 'shovel',
    # 'axe', or 'none'.
    # - The <Harvest level> is what level of tool can harvest the block if the tool type is not
    # 'none'; the default levels are wood and gold = 0, stone = 1, iron = 2, and diamond = 3.
    # - The <Light emitted> is how much the block glows, from 0.0 to 1.0.
    # - The higher the <Fire spread speed>, the faster the block will catch fire (0 for none).
    # - The higher the <Flammability>, the faster the block will burn and disappear (0 for none).
    # - The <Slipperiness> is how slippery the block is, with 0.6 as normal and ice as 0.98.
    # 
    # For an example, if you wanted to add a ruby ladder, you could put:
    # 
    #       ruby_ladder_____Ruby Ladder_____3.0_____10.0_____pickaxe_____2_____0.0_____0_____0_____0.6
    # 
    S:ladders <
     >
}


adding_redstone_interacting {
    # This adds a button block based on an existing block in the format:
    # 
    #       <Block name>_____<Block display name>_____<Existing block name>_____<Existing block metadata>_____<Pressed time>_____<Arrows Trigger>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Existing block name> is the name of the block the slab should be based on.
    # - The <Existing block metadata> is the metadata of the block it is based on.
    # - The <Pressed time> is how many ticks the button will stay pressed for. For wood buttons
    # this is 30, and for stone, 20 (Note there are 20 ticks per second).
    # - If <Arrows trigger> is true, arrows will set off the button.
    # 
    # For an example, if you wanted to add a ruby button, which presses for 2 seconds, you could put:
    # 
    #       ruby_button_____Ruby Button_____lootplusplus:ruby_block_____0_____40_____false
    S:buttons <
     >

    # This adds a door block based on an existing block in the format:
    # 
    #       <Block name>_____<Block display name>_____<Existing block name>_____<Existing block metadata>_____<Only redstone opens (true or false)>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Item name> is the name the door item will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include an item model for the door item at
    # assets/lootplusplus/models/item/<Block name>_item.json
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Existing block name> is the name of the block the slab should be based on.
    # - The <Existing block metadata> is the metadata of the block it is based on.
    # - If <Only redstone opens> is true, the door can only be openned with a redstone signal
    # 
    # The default doors could be represented with:
    # 
    # Wooden: wooden_door_____Wooden Door_____minecraft:planks_____0_____false
    # Iron:   iron_door_____Iron Door_____minecraft:iron_block_____0_____true
    # 
    # For an example, if you wanted to add a ruby door that only opens with redstone, you could put:
    # 
    #       ruby_door_____Ruby Door_____lootplusplus:ruby_block_____0_____true
    S:doors <
     >

    # This adds a fence gate based on an existing block in the format:
    # 
    #       <Block name>_____<Block display name>_____<Existing block name>_____<Existing block metadata>_____<Only redstone opens (true or false)>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Existing block name> is the name of the block the slab should be based on.
    # - The <Existing block metadata> is the metadata of the block it is based on.
    # - If <Only redstone opens> is true, the door can only be openned with a redstone signal
    # 
    # For an example, if you wanted to add a ruby fence gate that only opens with redstone, you could put:
    # 
    #       ruby_fence_gate_____Ruby Fence Gate_____lootplusplus:ruby_block_____0_____true
    S:fence_gates <
     >

    # This adds a pressure plate block based on an existing block in the format:
    # 
    #       <Block name>_____<Block display name>_____<Existing block name>_____<Existing block metadata>_____<Pressed time>_____<Weight>_____<What triggers>
    # 
    # - The <Block name> is the name the block will be registered with (note that a
    # 'lootplusplus:' will be added to the front; don't add anything with a colon
    # yourself!). You should also include a blockstate and item model file for each added
    # block in your resource pack at assets/lootplusplus/blockstates/<Block name>.json and
    # assets/lootplusplus/models/item/<Block name>.json.
    # - The <Block display name> is what people will see ingame while holding the block.
    # - The <Existing block name> is the name of the block the slab should be based on.
    # - The <Existing block metadata> is the metadata of the block it is based on.
    # - The <Pressed time> is how many ticks the plate will stay pressed for. For wood buttons
    # this is 30, and for stone, 20 (Note there are 20 ticks per second).
    # - The <Weight> is how many valid entities have to be on the plate for it to output a full
    # restone signal.
    # - <What triggers> determines what sets off the pressure plate. The valid options are
    # 
    #       everything, mobs, players, items
    # 
    # The default pressure plates could be represented with:
    # 
    # Wooden:  wooden_pressure_plate_____Wooden Pressure Plate_____minecraft:planks_____0_____20_____1_____everything
    # Stone:   stone_pressure_plate_____Stone Pressure Plate_____minecraft:stone_____0_____20_____1_____mobs
    # Iron:    iron_pressure_plate_____Iron Pressure Plate_____minecraft:iron_block_____0_____10_____150_____everything
    # Gold:    gold_pressure_plate_____Gold Pressure Plate_____minecraft:gold_block_____0_____10_____15_____everything
    # 
    # For an example, if you wanted to add a ruby pressure plate that will give a full redstone
    # signal when 10 players stand on it, and stays pressed for 2 seconds, you could put:
    # 
    #       ruby_pressure_plate_____Ruby Pressure Plate_____lootplusplus:ruby_block_____0_____40_____10_____players
    S:pressure_plates <
     >
}


